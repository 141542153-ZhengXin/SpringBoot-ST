##################    JDBC配置    ##################
#Druid生成的公钥
publickey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALFgOEk9vnKZLsuff80IU8dgOxXW2qzGS91yms2FrKHtRCp3DlrjS4E98wwwt7L4B2d35H5ev4aK9gZruK5DsH0CAwEAAQ==

spring.datasource.druid.username=root
spring.datasource.druid.password=ShPWtKxFfL1AunaJgW09cFUC+Obnwa/YFsRZP/2HnO7pryjbUPcsQO7zRO3VMtu8110oNl6V86XFtGEcV8Lozg==
spring.datasource.druid.url=jdbc:mysql://localhost:3306/springboot_st?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT
#驱动类自动从url的mysql识别,数据源类型自动识别
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver

##################    连接池的设置    ##################
## 连接池配置(通常来说，只需要修改initialSize、minIdle、maxActive
## 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。
## 分库分表较多的数据库，建议配置为false。
## removeabandoned不建议在生产环境中打开如果用SQL Server，建议追加配置)

#初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
#最小连接池数量
spring.datasource.druid.min-idle=5
#最大连接池数量 maxIdle已经不再使用
spring.datasource.druid.max-active=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#spring.datasource.druid.max-open-prepared-statements=
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
#spring.datasource.druid.max-evictable-idle-time-millis=
#用来检测连接是否有效的sql 必须是一个查询语句
#mysql中为 select 'x'
#oracle中为 select 1 from dual
spring.datasource.druid.validation-query=select x
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-borrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-return=false
#配置多个英文逗号分隔
spring.datasource.druid.filters= stat

##################    WebStatFilter配置    ##################
## WebStatFilter配置，说明请参考Druid Wiki，配置WebStatFilter
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable=false
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.principal-session-name=admin
spring.datasource.druid.web-stat-filter.principal-cookie-name=admin
spring.datasource.druid.web-stat-filter.profile-enable=true

##################    StatViewServlet配置    ##################
## 展示Druid的统计信息,StatViewServlet的用途包括：
## 1.提供监控信息展示的html页面
## 2.提供监控信息的JSON API
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled=true
#根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：
#http://127.0.0.1:9000/druid/index.html
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
## StatViewSerlvet展示出来的监控信息比较敏感，是系统运行的内部情况，如果你需要做访问控制，可以配置allow和deny这两个参数
## deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。如果allow没有配置或者为空，则允许所有访问
## 配置的格式
## <IP>
## 或者<IP>/<SUB_NET_MASK_size>其中128.242.127.1/24
## 24表示，前面24位是子网掩码，比对的时候，前面24位相同就匹配,不支持IPV6。
spring.datasource.druid.stat-view-servlet.allow=
spring.datasource.druid.stat-view-servlet.deny=128.242.127.1/24,128.242.128.1

##################    Spring监控配置    ##################
## Spring监控配置，说明请参考Druid Github Wiki，配置Druid和Spring关联监控配置
#Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
#spring.datasource.druid.aop-patterns=

#启用 ConfigFilter
spring.datasource.druid.filter.config.enabled=true
#配置 connection-properties，启用加密，配置公钥
spring.datasource.druid.connection-properties=config.decrypt=true;config.decrypt.key=${publickey}